pitbull_binom <- adoptions %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0)) %>%
mutate(chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0)) %>%
group_by(pitbull, chip_status, summer, month) %>%
summarize(prop_dead = sum(out_dead)/n(), count = n())
model1 <- glm(prop_dead ~ pitbull + chip_status + summer , weights = count, family = binomial, data = pitbull_binom)
summary(model1)
confit(model1$coefficients)
confit(model1)
confint(model1$coefficients)
confint(model1)
exp(confint(model1))
pitbull_binom <- adoptions %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0)) %>%
mutate(chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0)) %>%
group_by(pitbull, chip_status, summer, month) %>%
summarize(prop_dead = sum(out_dead)/n(), count = n())
model1 <- glm(prop_dead ~ pitbull + chip_status + summer , weights = count, family = binomial, data = pitbull_binom)
summary(model1)
exp(confint(model1))
model1_binom <- glm(prop_dead ~ pitbull + chip_status + summer , weights = count, family = binomial, data = pitbull_binom)
model1_quasi <- glm(prop_dead ~ pitbull + chip_status + summer , weights = count, family = quasibinomial, data = pitbull_binom)
summary(model1_binom)
exp(confint(model1_binom))
summary(model1_quasi)
exp(confint(model1_quasi))
adoptions$intake_condition
adoptions$intake_subtype
unique(adoptions$intake_subtype)
adoptions %>%
filter(!str_detect(intake_subtype, "DEAD"))
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "DEAD"))
unique(pitbull_binom$intake_subtype)
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED)"))
unique(pitbull_binom$intake_subtype)
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED)")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0)) %>%
mutate(chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0)) %>%
group_by(pitbull, chip_status, summer, month) %>%
summarize(prop_dead = sum(out_dead)/n(), count = n())
model1_binom <- glm(prop_dead ~ pitbull + chip_status + summer , weights = count, family = binomial, data = pitbull_binom)
model1_quasi <- glm(prop_dead ~ pitbull + chip_status + summer , weights = count, family = quasibinomial, data = pitbull_binom)
summary(model1_binom)
exp(confint(model1_binom))
summary(model1_quasi)
exp(confint(model1_quasi))
unique(adoptions$intake_condition)
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0),
chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0),
contagious = ifelse(str_detect(intake_condition, "[^NON-]CONTAGIOUS")))
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0),
chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0),
contagious = ifelse(str_detect(intake_condition, "[^NON-]CONTAGIOUS"), 1, 0))
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0),
chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0),
contagious = ifelse(str_detect(intake_condition, "[^(NON\\-)]CONTAGIOUS"), 1, 0))
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0),
chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0),
contagious = ifelse(str_detect(intake_condition, "[^\\-]CONTAGIOUS"), 1, 0))
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0),
chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0),
contagious=ifelse(grepl(".*[^NON-]CONTAGIOUS", intake_condition),1,0)) %>%
group_by(pitbull, chip_status, summer, month, contagious) %>%
summarize(prop_dead = sum(out_dead)/n(), count = n())
model2_binom <- glm(prop_dead ~ pitbull + chip_status +
summer + contagious, weights = count,
family = binomial, data = pitbull_binom)
model2_quasi <- glm(prop_dead ~ pitbull + chip_status +
summer = contagious , weights = count,
family = quasibinomial, data = pitbull_binom)
summary(model1_binom)
exp(confint(model1_binom))
summary(model1_quasi)
exp(confint(model1_quasi))
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0),
chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0),
contagious=ifelse(grepl(".*[^NON-]CONTAGIOUS", intake_condition),1,0)) %>%
group_by(pitbull, chip_status, summer, month, contagious) %>%
summarize(prop_dead = sum(out_dead)/n(), count = n())
doptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED"))
adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED"))
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED)")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0),
chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0),
contagious=ifelse(grepl(".*[^NON-]CONTAGIOUS", intake_condition),1,0)) %>%
group_by(pitbull, chip_status, summer, month, contagious) %>%
summarize(prop_dead = sum(out_dead)/n(), count = n())
model2_binom <- glm(prop_dead ~ pitbull + chip_status +
summer + contagious, weights = count,
family = binomial, data = pitbull_binom)
model2_quasi <- glm(prop_dead ~ pitbull + chip_status +
summer = contagious , weights = count,
family = quasibinomial, data = pitbull_binom)
model2_quasi <- glm(prop_dead ~ pitbull + chip_status +
summer + contagious , weights = count,
family = quasibinomial, data = pitbull_binom)
summary(model1_binom)
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED)")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0),
chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0),
contagious=ifelse(grepl(".*[^NON-]CONTAGIOUS", intake_condition),1,0)) %>%
group_by(pitbull, chip_status, summer, month, contagious) %>%
summarize(prop_dead = sum(out_dead)/n(), count = n())
model2_binom <- glm(prop_dead ~ pitbull + chip_status +
summer + contagious, weights = count,
family = binomial, data = pitbull_binom)
model2_quasi <- glm(prop_dead ~ pitbull + chip_status +
summer + contagious , weights = count,
family = quasibinomial, data = pitbull_binom)
summary(model2_binom)
exp(confint(model2_binom))
summary(model2_quasi)
exp(confint(model2_quasi))
adoptions_expanded_intake%>%
filter(cat==1|dog==1)%>%
group_by(animal_type)%>%
summarise(treatable=mean(treatable_intake))%>%
ggplot(aes(x=animal_type, y=treatable))+
geom_bar(stat="identity")
library(tidyverse)
library(readr)
library(lubridate)
library(kableExtra)
library(knitr)
adoptions <- read_csv("adoptions.csv")
proper=function(x) paste0(toupper(substr(x, 1, 1)), tolower(substring(x, 2)))
adoptions %>%
filter(dog == 1) %>%
mutate(outcome = as.factor(outcome_type),
pitbull = as.factor(pitbull)) %>%
group_by(pitbull, outcome_type) %>%
dplyr::count()%>%
rename("freq"=n)%>%
group_by(pitbull)%>%
mutate(freq = freq/ sum(freq))%>%
spread(outcome_type,freq) %>%
gather(key = Outcome, value = value, -pitbull) %>%
spread(key = pitbull, value = value) %>%
select(1,3,2) %>%
rename( "Pitbull (%)" = `1`, "Non-Pitbull (%)" = `0`) %>%
mutate(Outcome = proper(Outcome), `Pitbull (%)` =100*`Pitbull (%)` , `Non-Pitbull (%)`=`Non-Pitbull (%)`*100 )%>%
arrange(desc(`Pitbull (%)`))%>%
kable(digits = 2, format = "latex", booktabs = T, caption = "Pitbull Outcomes")%>%
kable_styling(latex_options =  c("striped", "hold_position"))
adoptions %>%
filter(dog == 1 | cat == 1) %>%
mutate(Species = ifelse(dog == 1, "Dog", "Cat")) %>%
mutate(returned = ifelse(outcome_type == "RETURNED TO OWNER", 1, 0)) %>%
group_by(Species) %>%
summarise(count = n(),
meanDays = mean(shelter_days, na.rm = TRUE),
`Euthanized` = sum(euthanized)/count,
`Adopted` = sum(adopted)/count,
`Stray` = sum(stray)/count,
`Returned` = sum(returned)/count,
`Chipped` = sum(chip_status == "SCAN CHIP", na.rm = TRUE)/count)%>%
gather(key = key, value = proportion, 4:8) %>%
ggplot(aes(x=Species, y= proportion)) +
geom_bar(stat = "identity")+
facet_grid(cols = vars(key))+
scale_y_continuous(breaks = seq(0, 1, by = .1))
intake <- adoptions %>%
mutate(intake_month = month(intake_date, label = TRUE)) %>%
ggplot(aes(x=intake_month))+
geom_bar()+ggtitle("Intake Month")
outcome <- adoptions %>%
filter(!is.na(outcome_date)) %>%
mutate(outcome_month = month(outcome_date, label = TRUE)) %>%
ggplot(aes(x=outcome_month))+
geom_bar()+ ggtitle("Outcome Month")
gridExtra::grid.arrange(intake, outcome)
adoptions_expanded_intake=adoptions%>%
mutate(healthy_intake=ifelse(grepl("^HEALTHY.*",intake_condition),1,0),
contagious_intake=ifelse(grepl(".*[^NON-]CONTAGIOUS", intake_condition),1,0),
untreatable_intake=ifelse(grepl(".*(UNTREATABLE).*", intake_condition),1,0),
treatable_intake=ifelse(grepl("^TREATABLE.*", intake_condition),1,0),
manageable_intake=ifelse(grepl(".*MANAGEABLE.*", intake_condition),1,0),
rehabitable_intake=ifelse(grepl(".*REHABILITABLE.*", intake_condition),1,0),
normal_intake=ifelse(grepl(".*NORMAL.*", intake_condition),1,0))
adoptions_expanded_intake%>%
filter(cat==1|dog==1)%>%
group_by(animal_type)%>%
summarise(rehab=mean(rehabitable_intake))%>%
ggplot(aes(x=animal_type, y=rehab))+
geom_bar(stat="identity")
variables <- c("Variable Name", "Variable Role", "Variable Type", "Range of Values", "Units")
breed <- c("animal_breed", "explanatory", "categorical", "296 unique breeds", "NA")
origin <- c("animal_origin", "explanatory", "categorical", "4 sources of shelter animals", "NA")
type <- c("animal_type", "explanatory", "categorical", "5 species of animal", "NA")
chip <- c("chip_status", "explanatory", "bianary", "(0,1)", "NA")
intake_type <- c("intake_type", "potential confounder", "categorial", "how animal came to be at the shelter", "NA")
outcome_type <- c("outcome_type", "reponse", "categorial", "how animals was removed from shelter", "NA")
intake_condition <- c("intake_condition", "potential confounder", "categorial", "keyword description of animal status at intake", "NA")
outcome_condition <- c("outcome_condition", "potential confounder", "categorial", "keyword description of animal status at outcome", "NA")
intake_date <- c("intake_date", "response", "date", "(2017-10-01, 2019-04-03)", "y-m-d")
outcome_date <- c("outcome_date", "response", "date", "(2017-10-01, 2019-04-03)", "y-m-d")
tab <- rbind(breed, origin, type, chip, intake_type, outcome_type, intake_condition, outcome_condition, intake_date, outcome_date)
colnames(tab) <- variables
rownames(tab) <- NULL
kable(tab, format = "latex", booktabs = T , caption = "Description of Variables") %>%
column_spec( 4, width = "4cm") %>%
kable_styling(latex_options = c("striped", "hold_position", "scale_down"))
adoptions %>%
select(animal_breed, animal_origin, outcome_type) %>%
filter(animal_breed == "BADGER")
adoptions %>%
select(animal_type, animal_origin, animal_breed, outcome_type)%>%
filter(animal_breed == "CALIFORNIAN")
# animal type
adoptions %>%
group_by(animal_type) %>%
count(sort = TRUE)
adoptions %>%
filter(!animal_type%in%c("D", "LIVESTOCK")) %>%
ggplot(aes(x=animal_type))+
geom_bar()
## Which dog breeds are in our data?
adoptions %>%
filter(animal_type == "DOG") %>%
mutate(animal_breed = fct_lump(animal_breed, n=15)) %>%
group_by(animal_breed) %>%
count(sort = TRUE)
adoptions %>%
filter(animal_type == "DOG") %>%
mutate(animal_breed = fct_lump(animal_breed, n=15)) %>%
group_by(animal_breed) %>%
count(sort = TRUE)%>%
ggplot(aes(x=fct_reorder(animal_breed,n), y=n))+
geom_bar(stat="identity")+
coord_flip()
## Which cat breeds are in our data?
adoptions %>%
filter(animal_type == "CAT") %>%
mutate(animal_breed = fct_lump(animal_breed, n=10)) %>%
group_by(animal_breed) %>%
count(sort = TRUE)
adoptions %>%
filter(animal_type == "CAT") %>%
mutate(animal_breed = fct_lump(animal_breed, n=15)) %>%
group_by(animal_breed) %>%
count(sort = TRUE)%>%
ggplot(aes(x=fct_reorder(animal_breed,n), y=n))+
geom_bar(stat="identity")+
coord_flip()
## Which types of wildlife are in our data?
adoptions %>%
filter(animal_type == "WILDLIFE") %>%
mutate(animal_breed = fct_lump(animal_breed, n=10)) %>%
group_by(animal_breed) %>%
count(sort = TRUE)
adoptions %>%
filter(dog == 1 | cat == 1) %>%
filter(!is.na(animal_origin)) %>%
ggplot(aes(x=animal_origin))+
geom_bar()+
facet_grid(~animal_type)
## General distribution of variable
adoptions %>%
filter(dog == 1 | cat == 1) %>%
ggplot(aes(x=chip_status))+
geom_bar()+
facet_grid(~animal_type)
## Relationship with returned to owner status
adoptions %>%
filter(dog == 1 | cat == 1) %>%
filter(!is.na(chip_status)) %>%
mutate(returned = as.factor(ifelse(outcome_type== "RETURNED TO OWNER", 1, 0))) %>%
ggplot(aes(x=chip_status, fill = returned))+
geom_bar(position = "fill")+
facet_grid(~animal_type)
## Which dog breeds are in our data?
adoptions %>%
mutate(intake_subtype = fct_lump(intake_subtype, n=10)) %>%
group_by(intake_subtype) %>%
count(sort = TRUE)
intake <- adoptions %>%
mutate(intake_month = month(intake_date, label = TRUE)) %>%
ggplot(aes(x=intake_month))+
geom_bar()+
ggtitle("Intake Month")
outcome <- adoptions %>%
filter(!is.na(outcome_date)) %>%
mutate(outcome_month = month(outcome_date, label = TRUE)) %>%
ggplot(aes(x=outcome_month))+
geom_bar()+ ggtitle("Outcome Month")
gridExtra::grid.arrange(intake, outcome)
# Ammount of time spent at the humane society looks to be about the same from month to month.
adoptions %>%
mutate(diff_time=difftime(outcome_date, intake_date))%>%
select(diff_time, month)%>%
ggplot(aes(x=diff_time))+
geom_density()+
facet_wrap(~as.factor(month))
adoptions%>%
mutate(out_day=day(outcome_date))%>%
ggplot(aes(x=out_day))+
geom_bar()+ ggtitle("Outcome day")
adoptions%>%
mutate(in_day=day(intake_date))%>%
ggplot(aes(x=in_day))+
geom_bar()+ ggtitle("Outcome day")
adoptions %>%
filter(dog == 1) %>%
mutate(adopted = as.factor(adopted),
pitbull = as.factor(pitbull)) %>%
ggplot(aes(x = pitbull, fill = adopted))+
geom_bar(position = "fill")
adoptions %>%
filter(dog == 1) %>%
mutate(euthanized = as.factor(euthanized),
pitbull = as.factor(pitbull)) %>%
ggplot(aes(x = pitbull, fill = euthanized))+
geom_bar(position = "fill")
adoptions %>%
filter(dog == 1) %>%
mutate(outcome = as.factor(outcome_type),
pitbull = as.factor(pitbull)) %>%
ggplot(aes(x = pitbull, fill = outcome))+
geom_bar(position = "fill")
adoptions %>%
filter(dog == 1) %>%
mutate(outcome = as.factor(outcome_type),
pitbull = as.factor(pitbull)) %>%
group_by(pitbull, outcome_type) %>%
count() %>%
rename("freq"=n)%>%
group_by(pitbull)%>%
mutate(freq = freq/ sum(freq))%>%
spread(outcome_type,freq)
adoptions %>%
filter(dog == 1 | cat == 1) %>%
mutate(Species = ifelse(dog == 1, "Dog", "Cat")) %>%
mutate(returned = ifelse(outcome_type == "RETURNED TO OWNER", 1, 0)) %>%
group_by(Species) %>%
summarise(count = n(),
meanDays = mean(shelter_days, na.rm = TRUE),
`Proportion Euthanized` = sum(euthanized)/count,
`Proportion Adopted` = sum(adopted)/count,
`Proportion Stray` = sum(stray)/count,
`Proportion Returned` = sum(returned)/count,
`Proportion Chipped` = sum(chip_status == "SCAN CHIP", na.rm = TRUE)/count)%>%
gather(key = key, value = proportion, 4:8) %>%
ggplot(aes(x=Species, y= proportion)) +
geom_bar(stat = "identity")+
facet_grid(cols = vars(key))
adoptions %>%
filter(dog == 1 | cat == 1) %>%
filter(shelter_days < 25) %>%
mutate(DogCat = ifelse(dog == 1, "Dog", "Cat")) %>%
ggplot(aes(x=shelter_days, y=..density..)) +
geom_histogram()+
facet_grid(~DogCat)
adoptions  %>%
filter(animal_breed== "RABBIT SH") %>%
filter(adopted == 1) %>%
mutate(month = lubridate::month(outcome_date, label = TRUE)) %>%
ggplot(aes(x=month)) +
geom_bar()
adoptions  %>%
filter(dog == 1 | cat == 1) %>%
mutate(DogCat = ifelse(dog == 1, "Dog", "Cat")) %>%
filter(adopted == 1, !is.na(month)) %>%
mutate(month = lubridate::month(outcome_date, label = TRUE)) %>%
ggplot(aes(x=month, y = ..prop.., group = 1)) +
geom_bar()+
facet_grid(rows = vars(DogCat), switch = "both")
adoptions_expanded_intake=adoptions%>%
mutate(healthy_intake=ifelse(grepl("^HEALTHY.*",intake_condition),1,0),
contagious_intake=ifelse(grepl(".*[^NON-]CONTAGIOUS", intake_condition),1,0),
untreatable_intake=ifelse(grepl(".*(UNTREATABLE).*", intake_condition),1,0),
treatable_intake=ifelse(grepl("^TREATABLE.*", intake_condition),1,0),
manageable_intake=ifelse(grepl(".*MANAGEABLE.*", intake_condition),1,0),
rehabitable_intake=ifelse(grepl(".*REHABILITABLE.*", intake_condition),1,0),
normal_intake=ifelse(grepl(".*NORMAL.*", intake_condition),1,0))
adoptions_expanded_intake%>%
filter(cat==1|dog==1)%>%
group_by(animal_type)%>%
summarise(Healthy=mean(healthy_intake))
adoptions_expanded_intake%>%
filter(cat==1|dog==1)%>%
group_by(animal_type)%>%
summarise(Healthy=mean(healthy_intake))%>%
ggplot(aes(x=animal_type, y=Healthy))+
geom_bar(stat="identity")
adoptions_expanded_intake%>%
filter(cat==1|dog==1)%>%
group_by(animal_type)%>%
summarise(contagious=mean(contagious_intake))%>%
ggplot(aes(x=animal_type, y=contagious))+
geom_bar(stat="identity")
adoptions_expanded_intake%>%
filter(cat==1|dog==1)%>%
group_by(animal_type)%>%
summarise(contagious=mean(contagious_intake))
adoptions_expanded_intake%>%
filter(cat==1|dog==1)%>%
group_by(animal_type)%>%
summarise(Healthy=mean(healthy_intake))
adoptions_expanded_intake%>%
filter(cat==1|dog==1)%>%
group_by(animal_type)%>%
summarise(treatable=mean(treatable_intake))%>%
ggplot(aes(x=animal_type, y=treatable))+
geom_bar(stat="identity")
# Chunk 1
library(tidyverse)
library(readr)
library(lubridate)
library(kableExtra)
library(knitr)
adoptions <- read_csv("adoptions.csv")
# Chunk 2
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0)) %>%
mutate(chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0)) %>%
group_by(pitbull, chip_status, summer, month) %>%
summarize(prop_dead = sum(out_dead)/n(), count = n())
model1_binom <- glm(prop_dead ~ pitbull + chip_status + summer , weights = count, family = binomial, data = pitbull_binom)
model1_quasi <- glm(prop_dead ~ pitbull + chip_status + summer , weights = count, family = quasibinomial, data = pitbull_binom)
summary(model1_binom)
exp(confint(model1_binom))
summary(model1_quasi)
exp(confint(model1_quasi))
# Chunk 3
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED)")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0),
chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0),
contagious=ifelse(grepl(".*[^NON-]CONTAGIOUS", intake_condition),1,0)) %>%
group_by(pitbull, chip_status, summer, month, contagious) %>%
summarize(prop_dead = sum(out_dead)/n(), count = n())
model2_binom <- glm(prop_dead ~ pitbull + chip_status +
summer + contagious, weights = count,
family = binomial, data = pitbull_binom)
model2_quasi <- glm(prop_dead ~ pitbull + chip_status +
summer + contagious , weights = count,
family = quasibinomial, data = pitbull_binom)
summary(model2_binom)
exp(confint(model2_binom))
summary(model2_quasi)
exp(confint(model2_quasi))
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED)")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0),
chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0),
contagious=ifelse(grepl(".*[^NON-]CONTAGIOUS", intake_condition),1,0),
treatable=ifelse(grepl("^TREATABLE.*", intake_condition),1,0)) %>%
group_by(pitbull, chip_status, summer, month, contagious, treatable) %>%
summarize(prop_dead = sum(out_dead)/n(), count = n())
model3_binom <- glm(prop_dead ~ pitbull + chip_status +
summer + contagious + treatable, weights = count,
family = binomial, data = pitbull_binom)
model3_quasi <- glm(prop_dead ~ pitbull + chip_status +
summer + contagious + treatable , weights = count,
family = quasibinomial, data = pitbull_binom)
summary(model3_binom)
exp(confint(model3_binom))
summary(model3_quasi)
exp(confint(model3_quasi))
summary(model1_binom)
summary(model1_quasi)
summary(model1_binom)
summary(model2_binom)
summary(model3_binom)
