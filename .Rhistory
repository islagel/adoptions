variables <- c("Variable Name", "Variable Role", "Variable Type", "Range of Values", "Units of Measurement")
breed <- c("animal_breed", "explanatory", "categorical", "296 unique breeds", "NA")
origin <- c("animal_origin", "explanatory", "categorical", "4 sources of shelter animals", "NA")
type <- c("animal_type", "explanatory", "categorical", "5 species of animal", "NA")
chip <- c("chip_status", "explanatory", "bianary", "(0,1)", "NA")
intake_type <- c("intake_type", "potential confounder", "categorial", "how animal came to be at the shelter", "NA")
outcome_type <- c("outcome_type", "reponse", "categorial", "how animals was removed from shelter", "NA")
intake_condition <- c("intake_condition", "potential confounder", "categorial", "keyword description of animal status at intake", "NA")
outcome_condition <- c("outcome_condition", "potential confounder", "categorial", "keyword description of animal status at outcome", "NA")
intake_date <- c("intake_date", "response", "date", "(2017-10-01, 2019-04-03)", "y-m-d")
outcome_date <- c("outcome_date", "response", "date", "(2017-10-01, 2019-04-03)", "y-m-d")
tab <- rbind(breed, origin, type, chip, intake_type, outcome_type, intake_condition, outcome_condition, intake_date, outcome_date)
colnames(tab) <- variables
rownames(tab) <- NULL
kable(tab, format = "latex", booktabs = T) %>%
column_spec( 4, width = "4cm") %>%
kable_styling(latex_options = "striped")
library(tidyverse)
library(tidyverse)
library(kableExtra)
install.packages("kableExtra")
kable(tab, format = "latex", booktabs = T) %>%
column_spec( 4, width = "4cm") %>%
kable_styling(latex_options = "striped")
kable(tab, format = "latex", booktabs = T) %>%
column_spec( 4, width = "4cm") %>%
kable_styling(latex_options = "striped")
variables <- c("Variable Name", "Variable Role", "Variable Type", "Range of Values", "Units of Measurement")
breed <- c("animal_breed", "explanatory", "categorical", "296 unique breeds", "NA")
origin <- c("animal_origin", "explanatory", "categorical", "4 sources of shelter animals", "NA")
type <- c("animal_type", "explanatory", "categorical", "5 species of animal", "NA")
chip <- c("chip_status", "explanatory", "bianary", "(0,1)", "NA")
intake_type <- c("intake_type", "potential confounder", "categorial", "how animal came to be at the shelter", "NA")
outcome_type <- c("outcome_type", "reponse", "categorial", "how animals was removed from shelter", "NA")
intake_condition <- c("intake_condition", "potential confounder", "categorial", "keyword description of animal status at intake", "NA")
outcome_condition <- c("outcome_condition", "potential confounder", "categorial", "keyword description of animal status at outcome", "NA")
intake_date <- c("intake_date", "response", "date", "(2017-10-01, 2019-04-03)", "y-m-d")
outcome_date <- c("outcome_date", "response", "date", "(2017-10-01, 2019-04-03)", "y-m-d")
tab <- rbind(breed, origin, type, chip, intake_type, outcome_type, intake_condition, outcome_condition, intake_date, outcome_date)
colnames(tab) <- variables
rownames(tab) <- NULL
kable(tab, format = "latex", booktabs = T) %>%
column_spec( 4, width = "4cm") %>%
kable_styling(latex_options = "striped")
?kable
library(kableExtra)
kable(tab, format = "latex", booktabs = T) %>%
column_spec( 4, width = "4cm") %>%
kable_styling(latex_options = "striped")
install.packages()
library(tidyverse)
library(kableExtra)
library(tidyverse)
library(readr)
library(lubridate)
adoptions <- read_csv("~/Stats 316 S19/Project/adoptions/adoptions.csv")
# For Jack keep the line below for reading in the data
adoptions <- read_csv("adoptions.csv")
head(adoptions)
view(adoptions)
adoptions %>%
mutate(month = as.factor(month(outcome_date)))%>%
filter(!is.na(month))%>%
ggplot() +
geom_bar(aes(x=month))
adoptions %>%
mutate(month = month(outcome_date))%>%
filter(!is.na(month))%>%
filter(animal_type=="CAT"| animal_type=="DOG"|animal_type=="BIRD")%>%
ggplot() +
geom_density(aes(x=month, color=animal_type, fill=animal_type, alpha=.1))+
scale_x_discrete("month", limits=as.character(1:12))
adoptions %>%
filter(animal_type=="WILDLIFE") %>%
group_by(animal_breed) %>%
summarise(n()) %>%
print(n=32)
adoptions%>%
filter(dog == 1) %>%
filter(adopted == 1) %>%
group_by(outcome_date) %>%
tally() %>%
ggplot()+
geom_histogram(aes(x=n))
adoptions%>%
filter(dog==1)%>%
group_by(pitbull)%>%
summarise(mean(adopted))
adoptions%>%
filter(animal_type=="WILDLIFE")%>%
select(outcome_type)%>%
unique()
## Which dog breeds are in our data?
adoptions %>%
filter(animal_type == "DOG") %>%
mutate(animal_breed = fct_lump(animal_breed, n=15)) %>%
group_by(animal_breed) %>%
count(sort = TRUE)
## Which cat breeds are in our data?
adoptions %>%
filter(animal_type == "CAT") %>%
mutate(animal_breed = fct_lump(animal_breed, n=10)) %>%
group_by(animal_breed) %>%
count(sort = TRUE)
## Which types of wildlife are in our data?
adoptions %>%
filter(animal_type == "WILDLIFE") %>%
mutate(animal_breed = fct_lump(animal_breed, n=10)) %>%
group_by(animal_breed) %>%
count(sort = TRUE)
adoptions %>%
filter(dog == 1 | cat == 1) %>%
ggplot(aes(x=animal_origin))+
geom_bar()+
facet_grid(~animal_type)
## General distribution of variable
adoptions %>%
filter(dog == 1 | cat == 1) %>%
ggplot(aes(x=chip_status))+
geom_bar()+
facet_grid(~animal_type)
## Relationship with returned to owner status
adoptions %>%
filter(dog == 1 | cat == 1) %>%
filter(!is.na(chip_status)) %>%
mutate(returned = as.factor(ifelse(outcome_type== "RETURNED TO OWNER", 1, 0))) %>%
ggplot(aes(x=chip_status, fill = returned))+
geom_bar(position = "fill")
## Which dog breeds are in our data?
adoptions %>%
mutate(intake_subtype = fct_lump(intake_subtype, n=15)) %>%
group_by(intake_subtype) %>%
count(sort = TRUE)
intake <- adoptions %>%
mutate(intake_month = month(intake_date, label = TRUE)) %>%
ggplot(aes(x=intake_month))+
geom_bar()+ggtitle("Intake Month")
outcome <- adoptions %>%
filter(!is.na(outcome_date)) %>%
mutate(outcome_month = month(outcome_date, label = TRUE)) %>%
ggplot(aes(x=outcome_month))+
geom_bar()+ ggtitle("Outcome Month")
gridExtra::grid.arrange(intake, outcome)
adoptions %>%
filter(dog == 1) %>%
mutate(adopted = as.factor(adopted),
pitbull = as.factor(pitbull)) %>%
ggplot(aes(x = pitbull, fill = adopted))+
geom_bar(position = "fill")
adoptions %>%
filter(dog == 1) %>%
mutate(euthanized = as.factor(euthanized),
pitbull = as.factor(pitbull)) %>%
ggplot(aes(x = pitbull, fill = euthanized))+
geom_bar(position = "fill")
adoptions %>%
filter(dog == 1) %>%
mutate(euthanized = as.factor(euthanized),
pitbull = as.factor(pitbull)) %>%
ggplot(aes(x = pitbull, fill = euthanized))+
geom_bar(position = "fill")
adoptions %>%
filter(dog == 1) %>%
mutate(outcome = as.factor(outcome_type),
pitbull = as.factor(pitbull)) %>%
ggplot(aes(x = pitbull, fill = outcome))+
geom_bar(position = "fill")
adoptions %>%
filter(dog == 1) %>%
mutate(outcome = as.factor(outcome_type),
pitbull = as.factor(pitbull)) %>%
group_by(pitbull, outcome_type) %>%
count(name = "freq") %>%
group_by(pitbull)%>%
mutate(freq = freq/ sum(freq))%>%
spread(outcome_type,freq)
adoptions %>%
filter(dog == 1) %>%
mutate(outcome = as.factor(outcome_type),
pitbull = as.factor(pitbull)) %>%
group_by(pitbull, outcome_type) %>%
count(name = "freq") %>%
group_by(pitbull)%>%
mutate(freq = freq/ sum(freq))%>%
spread(outcome_type,freq)
# Chunk 1
library(tidyverse)
library(readr)
adoptions <- read_csv("~/Stats 316 S19/Project/adoptions/adoptions.csv")
# Chunk 2
## Which dog breeds are in our data?
adoptions %>%
filter(animal_type == "DOG") %>%
mutate(animal_breed = fct_lump(animal_breed, n=15)) %>%
group_by(animal_breed) %>%
count(sort = TRUE)
## Which cat breeds are in our data?
adoptions %>%
filter(animal_type == "CAT") %>%
mutate(animal_breed = fct_lump(animal_breed, n=10)) %>%
group_by(animal_breed) %>%
count(sort = TRUE)
## Which types of wildlife are in our data?
adoptions %>%
filter(animal_type == "WILDLIFE") %>%
mutate(animal_breed = fct_lump(animal_breed, n=10)) %>%
group_by(animal_breed) %>%
count(sort = TRUE)
# Chunk 3
adoptions %>%
filter(dog == 1 | cat == 1) %>%
ggplot(aes(x=animal_origin))+
geom_bar()+
facet_grid(~animal_type)
# Chunk 4
## General distribution of variable
adoptions %>%
filter(dog == 1 | cat == 1) %>%
ggplot(aes(x=chip_status))+
geom_bar()+
facet_grid(~animal_type)
## Relationship with returned to owner status
adoptions %>%
filter(dog == 1 | cat == 1) %>%
filter(!is.na(chip_status)) %>%
mutate(returned = as.factor(ifelse(outcome_type== "RETURNED TO OWNER", 1, 0))) %>%
ggplot(aes(x=chip_status, fill = returned))+
geom_bar(position = "fill")
# Chunk 5
## Which dog breeds are in our data?
adoptions %>%
mutate(intake_subtype = fct_lump(intake_subtype, n=15)) %>%
group_by(intake_subtype) %>%
count(sort = TRUE)
# Chunk 6
intake <- adoptions %>%
mutate(intake_month = month(intake_date, label = TRUE)) %>%
ggplot(aes(x=intake_month))+
geom_bar()+ggtitle("Intake Month")
outcome <- adoptions %>%
filter(!is.na(outcome_date)) %>%
mutate(outcome_month = month(outcome_date, label = TRUE)) %>%
ggplot(aes(x=outcome_month))+
geom_bar()+ ggtitle("Outcome Month")
gridExtra::grid.arrange(intake, outcome)
# Chunk 7
adoptions %>%
filter(dog == 1) %>%
mutate(adopted = as.factor(adopted),
pitbull = as.factor(pitbull)) %>%
ggplot(aes(x = pitbull, fill = adopted))+
geom_bar(position = "fill")
# Chunk 8
adoptions %>%
filter(dog == 1) %>%
mutate(euthanized = as.factor(euthanized),
pitbull = as.factor(pitbull)) %>%
ggplot(aes(x = pitbull, fill = euthanized))+
geom_bar(position = "fill")
adoptions %>%
filter(dog == 1) %>%
mutate(outcome = as.factor(outcome_type),
pitbull = as.factor(pitbull)) %>%
ggplot(aes(x = pitbull, fill = outcome))+
geom_bar(position = "fill")
adoptions %>%
filter(dog == 1) %>%
mutate(outcome = as.factor(outcome_type),
pitbull = as.factor(pitbull)) %>%
group_by(pitbull, outcome_type) %>%
count(name = "freq") %>%
group_by(pitbull)%>%
mutate(freq = freq/ sum(freq))%>%
spread(outcome_type,freq)
adoptions %>%
filter(dog == 1 | cat == 1) %>%
mutate(DogCat = ifelse(dog == 1, "Dog", "Cat")) %>%
group_by(DogCat) %>%
summarise(count = n(),
meanDays = mean(shelter_days, na.rm = TRUE),
prop_euth = sum(euthanized)/count,
prop_adopt = sum(adopted)/count,
prop_stray = sum(stray)/count)
adoptions %>%
filter(dog == 1 | cat == 1) %>%
filter(shelter_days < 100) %>%
mutate(DogCat = ifelse(dog == 1, "Dog", "Cat")) %>%
ggplot(aes(x=shelter_days, y=..density..)) +
geom_histogram()+
facet_grid(~DogCat)