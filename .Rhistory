group_by(animal_breed) %>%
count(sort = TRUE)
adoptions %>%
filter(animal_type == "DOG") %>%
mutate(animal_breed = fct_lump(animal_breed, n=15)) %>%
group_by(animal_breed) %>%
count(sort = TRUE)%>%
ggplot(aes(x=fct_reorder(animal_breed,n), y=n))+
geom_bar(stat="identity")+
coord_flip()
## Which cat breeds are in our data?
adoptions %>%
filter(animal_type == "CAT") %>%
mutate(animal_breed = fct_lump(animal_breed, n=10)) %>%
group_by(animal_breed) %>%
count(sort = TRUE)
adoptions %>%
filter(animal_type == "CAT") %>%
mutate(animal_breed = fct_lump(animal_breed, n=15)) %>%
group_by(animal_breed) %>%
count(sort = TRUE)%>%
ggplot(aes(x=fct_reorder(animal_breed,n), y=n))+
geom_bar(stat="identity")+
coord_flip()
## Which types of wildlife are in our data?
adoptions %>%
filter(animal_type == "WILDLIFE") %>%
mutate(animal_breed = fct_lump(animal_breed, n=10)) %>%
group_by(animal_breed) %>%
count(sort = TRUE)
adoptions %>%
filter(dog == 1 | cat == 1) %>%
filter(!is.na(animal_origin)) %>%
ggplot(aes(x=animal_origin))+
geom_bar()+
facet_grid(~animal_type)
## General distribution of variable
adoptions %>%
filter(dog == 1 | cat == 1) %>%
ggplot(aes(x=chip_status))+
geom_bar()+
facet_grid(~animal_type)
## Relationship with returned to owner status
adoptions %>%
filter(dog == 1 | cat == 1) %>%
filter(!is.na(chip_status)) %>%
mutate(returned = as.factor(ifelse(outcome_type== "RETURNED TO OWNER", 1, 0))) %>%
ggplot(aes(x=chip_status, fill = returned))+
geom_bar(position = "fill")+
facet_grid(~animal_type)
## Which dog breeds are in our data?
adoptions %>%
mutate(intake_subtype = fct_lump(intake_subtype, n=10)) %>%
group_by(intake_subtype) %>%
count(sort = TRUE)
intake <- adoptions %>%
mutate(intake_month = month(intake_date, label = TRUE)) %>%
ggplot(aes(x=intake_month))+
geom_bar()+
ggtitle("Intake Month")
outcome <- adoptions %>%
filter(!is.na(outcome_date)) %>%
mutate(outcome_month = month(outcome_date, label = TRUE)) %>%
ggplot(aes(x=outcome_month))+
geom_bar()+ ggtitle("Outcome Month")
gridExtra::grid.arrange(intake, outcome)
# Ammount of time spent at the humane society looks to be about the same from month to month.
adoptions %>%
mutate(diff_time=difftime(outcome_date, intake_date))%>%
select(diff_time, month)%>%
ggplot(aes(x=diff_time))+
geom_density()+
facet_wrap(~as.factor(month))
adoptions%>%
mutate(out_day=day(outcome_date))%>%
ggplot(aes(x=out_day))+
geom_bar()+ ggtitle("Outcome day")
adoptions%>%
mutate(in_day=day(intake_date))%>%
ggplot(aes(x=in_day))+
geom_bar()+ ggtitle("Outcome day")
adoptions %>%
filter(dog == 1) %>%
mutate(adopted = as.factor(adopted),
pitbull = as.factor(pitbull)) %>%
ggplot(aes(x = pitbull, fill = adopted))+
geom_bar(position = "fill")
adoptions %>%
filter(dog == 1) %>%
mutate(euthanized = as.factor(euthanized),
pitbull = as.factor(pitbull)) %>%
ggplot(aes(x = pitbull, fill = euthanized))+
geom_bar(position = "fill")
adoptions %>%
filter(dog == 1) %>%
mutate(outcome = as.factor(outcome_type),
pitbull = as.factor(pitbull)) %>%
ggplot(aes(x = pitbull, fill = outcome))+
geom_bar(position = "fill")
adoptions %>%
filter(dog == 1) %>%
mutate(outcome = as.factor(outcome_type),
pitbull = as.factor(pitbull)) %>%
group_by(pitbull, outcome_type) %>%
count() %>%
rename("freq"=n)%>%
group_by(pitbull)%>%
mutate(freq = freq/ sum(freq))%>%
spread(outcome_type,freq)
adoptions %>%
filter(dog == 1 | cat == 1) %>%
mutate(Species = ifelse(dog == 1, "Dog", "Cat")) %>%
mutate(returned = ifelse(outcome_type == "RETURNED TO OWNER", 1, 0)) %>%
group_by(Species) %>%
summarise(count = n(),
meanDays = mean(shelter_days, na.rm = TRUE),
`Proportion Euthanized` = sum(euthanized)/count,
`Proportion Adopted` = sum(adopted)/count,
`Proportion Stray` = sum(stray)/count,
`Proportion Returned` = sum(returned)/count,
`Proportion Chipped` = sum(chip_status == "SCAN CHIP", na.rm = TRUE)/count)%>%
gather(key = key, value = proportion, 4:8) %>%
ggplot(aes(x=Species, y= proportion)) +
geom_bar(stat = "identity")+
facet_grid(cols = vars(key))
adoptions %>%
filter(dog == 1 | cat == 1) %>%
filter(shelter_days < 25) %>%
mutate(DogCat = ifelse(dog == 1, "Dog", "Cat")) %>%
ggplot(aes(x=shelter_days, y=..density..)) +
geom_histogram()+
facet_grid(~DogCat)
adoptions  %>%
filter(animal_breed== "RABBIT SH") %>%
filter(adopted == 1) %>%
mutate(month = lubridate::month(outcome_date, label = TRUE)) %>%
ggplot(aes(x=month)) +
geom_bar()
adoptions  %>%
filter(dog == 1 | cat == 1) %>%
mutate(DogCat = ifelse(dog == 1, "Dog", "Cat")) %>%
filter(adopted == 1, !is.na(month)) %>%
mutate(month = lubridate::month(outcome_date, label = TRUE)) %>%
ggplot(aes(x=month, y = ..prop.., group = 1)) +
geom_bar()+
facet_grid(rows = vars(DogCat), switch = "both")
adoptions_expanded_intake=adoptions%>%
mutate(healthy_intake=ifelse(grepl("^HEALTHY.*",intake_condition),1,0),
contagious_intake=ifelse(grepl(".*[^NON-]CONTAGIOUS", intake_condition),1,0),
untreatable_intake=ifelse(grepl(".*(UNTREATABLE).*", intake_condition),1,0),
treatable_intake=ifelse(grepl("^TREATABLE.*", intake_condition),1,0),
manageable_intake=ifelse(grepl(".*MANAGEABLE.*", intake_condition),1,0),
rehabitable_intake=ifelse(grepl(".*REHABILITABLE.*", intake_condition),1,0),
normal_intake=ifelse(grepl(".*NORMAL.*", intake_condition),1,0))
adoptions_expanded_intake%>%
filter(cat==1|dog==1)%>%
group_by(animal_type)%>%
summarise(Healthy=mean(healthy_intake))
adoptions_expanded_intake%>%
filter(cat==1|dog==1)%>%
group_by(animal_type)%>%
summarise(Healthy=mean(healthy_intake))%>%
ggplot(aes(x=animal_type, y=Healthy))+
geom_bar(stat="identity")
adoptions_expanded_intake%>%
filter(cat==1|dog==1)%>%
group_by(animal_type)%>%
summarise(contagious=mean(contagious_intake))%>%
ggplot(aes(x=animal_type, y=contagious))+
geom_bar(stat="identity")
adoptions_expanded_intake%>%
filter(cat==1|dog==1)%>%
group_by(animal_type)%>%
summarise(contagious=mean(contagious_intake))
adoptions_expanded_intake%>%
filter(cat==1|dog==1)%>%
group_by(animal_type)%>%
summarise(Healthy=mean(healthy_intake))
adoptions_expanded_intake%>%
filter(cat==1|dog==1)%>%
group_by(animal_type)%>%
summarise(treatable=mean(treatable_intake))%>%
ggplot(aes(x=animal_type, y=treatable))+
geom_bar(stat="identity")
# Chunk 1
library(tidyverse)
library(readr)
library(lubridate)
library(kableExtra)
library(knitr)
adoptions <- read_csv("adoptions.csv")
library(tidyverse)
library(readr)
library(lubridate)
library(kableExtra)
library(knitr)
adoptions <- read_csv("adoptions.csv")
adoptions
names(adoptions)
library(lmer)
lme4r
library(lme4)
names(adoptions)
just_dog_adoptions=%>%
filter(animal_breed=="DOG")
just_dog_adoptions=adoptions%>%
filter(animal_breed=="DOG")
adoptions$animal_breed
names(adoptions)
just_dog_adoptions=adoptions%>%
filter(animal_type=="DOG")%>%
mutate(animal_breed=as.factor(animal_breed))
just_dog_adoptions=adoptions%>%
filter(animal_type=="DOG")%>%
mutate(animal_breed=as.factor(animal_breed))
just_dog_adoptions
just_dog_adoptions
mod.1=lmer(adopted~1+(1|animal_breed), data=just_dog_adoptions)
just_dog_adoptions=adoptions%>%
filter(animal_type=="DOG")%>%
mutate(animal_breed=as.factor(animal_breed))
mod.1=lmer(adopted~1+(1|animal_breed), data=just_dog_adoptions)
summary(mod.1)
names(just_dog_adoptions)
mod.1=lmer(adopted~1+(1|animal_breed), data=just_dog_adoptions)
summary(mod.1)
just_dog_adoptions=adoptions%>%
filter(animal_type=="DOG")%>%
mutate(animal_breed=as.factor(animal_breed))%>%
mutate(healthy_intake=ifelse(grepl("^HEALTHY.*",intake_condition),1,0),
contagious_intake=ifelse(grepl(".*[^NON-]CONTAGIOUS", intake_condition),1,0),
untreatable_intake=ifelse(grepl(".*(UNTREATABLE).*", intake_condition),1,0),
treatable_intake=ifelse(grepl("^TREATABLE.*", intake_condition),1,0),
manageable_intake=ifelse(grepl(".*MANAGEABLE.*", intake_condition),1,0),
rehabitable_intake=ifelse(grepl(".*REHABILITABLE.*", intake_condition),1,0),
normal_intake=ifelse(grepl(".*NORMAL.*", intake_condition),1,0))
mod.1=lmer(adopted~1+(1|animal_breed), data=just_dog_adoptions)
summary(mod.1)
names(just_dog_adoptions)
just_dog_adoptions=adoptions%>%
filter(animal_type=="DOG")%>%
mutate(animal_breed=as.factor(animal_breed))%>%
mutate(healthy_intake=ifelse(grepl("^HEALTHY.*",intake_condition),1,0),
contagious_intake=ifelse(grepl(".*[^NON-]CONTAGIOUS", intake_condition),1,0),
untreatable_intake=ifelse(grepl(".*(UNTREATABLE).*", intake_condition),1,0),
treatable_intake=ifelse(grepl("^TREATABLE.*", intake_condition),1,0),
manageable_intake=ifelse(grepl(".*MANAGEABLE.*", intake_condition),1,0),
rehabitable_intake=ifelse(grepl(".*REHABILITABLE.*", intake_condition),1,0),
normal_intake=ifelse(grepl(".*NORMAL.*", intake_condition),1,0))
names(just_dog_adoptions)
mod.2=lmer(adopted~month+chip_status+untreatable_intake+(1|breed), data=just_dog_adoptions)
mod.2=lmer(adopted~month+chip_status+untreatable_intake+(1|animal_breed), data=just_dog_adoptions)
summary(mod.2)
mod.1=lmer(adopted~1+(1|animal_breed), data=just_dog_adoptions)
summary(mod.1)
library(tidyverse)
library(readr)
library(lubridate)
library(kableExtra)
library(lme4)
library(knitr)
adoptions <- read_csv("adoptions.csv")
just_dog_adoptions=adoptions%>%
filter(animal_type=="DOG")%>%
mutate(animal_breed=as.factor(animal_breed))%>%
mutate(healthy_intake=ifelse(grepl("^HEALTHY.*",intake_condition),1,0),
contagious_intake=ifelse(grepl(".*[^NON-]CONTAGIOUS", intake_condition),1,0),
untreatable_intake=ifelse(grepl(".*(UNTREATABLE).*", intake_condition),1,0),
treatable_intake=ifelse(grepl("^TREATABLE.*", intake_condition),1,0),
manageable_intake=ifelse(grepl(".*MANAGEABLE.*", intake_condition),1,0),
rehabitable_intake=ifelse(grepl(".*REHABILITABLE.*", intake_condition),1,0),
normal_intake=ifelse(grepl(".*NORMAL.*", intake_condition),1,0))
mod.1=lmer(adopted~1+(1|animal_breed), data=just_dog_adoptions)
summary(mod.1)
mod.2=lmer(adopted~month+chip_status+untreatable_intake+(1|animal_breed), data=just_dog_adoptions)
summary(mod.2)
9/12
library(glmm)
?glmer
install.packages("glmer")
library(lme4)
?glmer
mod.1=glmer(adopted~1+(1|animal_breed), data=just_dog_adoptions, family = "binomial")
library(tidyverse)
library(readr)
library(lubridate)
library(lme4)
library(kableExtra)
library(knitr)
adoptions <- read_csv("adoptions.csv")
just_dog_adoptions=adoptions%>%
filter(animal_type=="DOG")%>%
mutate(animal_breed=as.factor(animal_breed))%>%
mutate(healthy_intake=ifelse(grepl("^HEALTHY.*",intake_condition),1,0),
contagious_intake=ifelse(grepl(".*[^NON-]CONTAGIOUS", intake_condition),1,0),
untreatable_intake=ifelse(grepl(".*(UNTREATABLE).*", intake_condition),1,0),
treatable_intake=ifelse(grepl("^TREATABLE.*", intake_condition),1,0),
manageable_intake=ifelse(grepl(".*MANAGEABLE.*", intake_condition),1,0),
rehabitable_intake=ifelse(grepl(".*REHABILITABLE.*", intake_condition),1,0),
normal_intake=ifelse(grepl(".*NORMAL.*", intake_condition),1,0))
mod.1=glmer(adopted~1+(1|animal_breed), data=just_dog_adoptions, family = "binomial")
summary(mod.1)
mod.1q=glmer(adopted~1+(1|animal_breed), data=just_dog_adoptions, family = "quasibinomial")
mod.2=glmer(adopted~month+chip_status+untreatable_intake+(1|animal_breed), data=just_dog_adoptions, family = "binomial")
summary(mod.2)
library(tidyverse)
library(readr)
library(lubridate)
library(kableExtra)
library(knitr)
adoptions <- read_csv("adoptions.csv")
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0)) %>%
mutate(chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0)) %>%
group_by(pitbull, chip_status, summer, month) %>%
summarize(prop_dead = sum(out_dead)/n(), count = n())
model1_binom <- glm(prop_dead ~ pitbull + chip_status + summer , weights = count, family = binomial, data = pitbull_binom)
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0)) %>%
mutate(chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0)) %>%
group_by(pitbull, chip_status, summer, month) %>%
summarize(prop_dead = sum(out_dead)/n(), count = n())
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED)")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0)) %>%
mutate(chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0)) %>%
group_by(pitbull, chip_status, summer, month) %>%
summarize(prop_dead = sum(out_dead)/n(), count = n())
model1_binom <- glm(prop_dead ~ pitbull + chip_status + summer , weights = count, family = binomial, data = pitbull_binom)
model1_quasi <- glm(prop_dead ~ pitbull + chip_status + summer , weights = count, family = quasibinomial, data = pitbull_binom)
summary(model1_binom)
exp(confint(model1_binom))
summary(model1_quasi)
summary(model1_binom)
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED)")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0),
chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0),
contagious=ifelse(grepl(".*[^NON-]CONTAGIOUS", intake_condition),1,0)) %>%
group_by(pitbull, chip_status, summer, month, contagious) %>%
summarize(prop_dead = sum(out_dead)/n(), count = n())
model2_binom <- glm(prop_dead ~ pitbull + chip_status +
summer + contagious, weights = count,
family = binomial, data = pitbull_binom)
model2_quasi <- glm(prop_dead ~ pitbull + chip_status +
summer + contagious , weights = count,
family = quasibinomial, data = pitbull_binom)
summary(model2_binom)
exp(confint(model2_binom))
summary(model2_quasi)
exp(confint(model2_quasi))
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED)")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0),
chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0),
contagious=ifelse(grepl(".*[^NON-]CONTAGIOUS", intake_condition),1,0),
treatable=ifelse(grepl("^TREATABLE.*", intake_condition),1,0)) %>%
group_by(pitbull, chip_status, summer, month, contagious, treatable) %>%
summarize(prop_dead = sum(out_dead)/n(), count = n())
model3_binom <- glm(prop_dead ~ pitbull + chip_status +
summer + contagious + treatable, weights = count,
family = binomial, data = pitbull_binom)
summary(model3_binom)
model1_binom <- glm(adopted ~ pitbull + chip_status + summer , weights = count, family = binomial, data = pitbull_binom)
pitbull_binom
adoptions <- read_csv("adoptions.csv")
pitbull_binom <- adoptions %>%
filter(!str_detect(intake_subtype, "(DEAD)|(DIED)")) %>%
filter(dog == 1) %>%
mutate(out_dead = outcome_type %in% c("DEAD ON ARRIVAL", "EUTHANIZED", "DIED"),
summer = ifelse(month %in% c(5, 6, 7, 8, 9), 1, 0)) %>%
mutate(chip_status = ifelse(chip_status=="SCAN CHIP", 1, 0)) %>%
group_by(pitbull, chip_status, summer, month) %>%
summarize(prop_dead = sum(out_dead)/n(), count = n())
adoptions <- read_csv("adoptions.csv")
